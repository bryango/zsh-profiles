#compdef nextonic

autoload -U is-at-least

_nextonic() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-c+[How much chatter to print when running]:level: ' \
'--chatter=[How much chatter to print when running]:level: ' \
'--color=[Control colorization of output]:when:(always auto never)' \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
":: :_nextonic_commands" \
"*::: :->tectonic -X" \
&& ret=0
    case $state in
    (tectonic -X)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-command-$line[1]:"
        case $line[1] in
            (build)
_arguments "${_arguments_options[@]}" \
'--target=[Specify the target of the build.]:TARGET: ' \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'--untrusted[Document is untrusted -- disable all known-insecure features]' \
'-C[Use only resource files cached locally]' \
'--only-cached[Use only resource files cached locally]' \
'-k[Keep the intermediate files generated during processing]' \
'--keep-intermediates[Keep the intermediate files generated during processing]' \
'--keep-logs[Keep the log files generated during processing]' \
'-p[Print the engine'\''s chatter during processing]' \
'--print[Print the engine'\''s chatter during processing]' \
'--open[Open built document using system handler]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(bundle)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
":: :_nextonic__bundle_commands" \
"*::: :->bundle" \
&& ret=0

    case $state in
    (bundle)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-bundle-command-$line[1]:"
        case $line[1] in
            (cat)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-C[Use only resource files cached locally]' \
'--only-cached[Use only resource files cached locally]' \
'-h[Print help]' \
'--help[Print help]' \
':filename -- The name of the file to dump:' \
&& ret=0
;;
(search)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-C[Use only resource files cached locally]' \
'--only-cached[Use only resource files cached locally]' \
'-h[Print help]' \
'--help[Print help]' \
'::term -- The search term:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_nextonic__bundle__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-bundle-help-command-$line[1]:"
        case $line[1] in
            (cat)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(search)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(compile)
_arguments "${_arguments_options[@]}" \
'-f+[The name of the "format" file used to initialize the TeX engine]:path: ' \
'--format=[The name of the "format" file used to initialize the TeX engine]:path: ' \
'-b+[Use this directory or Zip-format bundle file to find resource files instead of the default]:file_path:_files' \
'--bundle=[Use this directory or Zip-format bundle file to find resource files instead of the default]:file_path:_files' \
'--outfmt=[The kind of output to generate]:format: ' \
'--makefile-rules=[Write Makefile-format rules expressing the dependencies of this run to <dest_path>]:dest_path:_files' \
'--pass=[Which engines to run]:PASS: ' \
'-r+[Rerun the TeX engine exactly this many times after the first]:count: ' \
'--reruns=[Rerun the TeX engine exactly this many times after the first]:count: ' \
'*--hide=[Tell the engine that no file at <hide_path> exists, if it tries to read it]:hide_path:_files' \
'-o+[The directory in which to place output files \[default\: the directory containing <input>\]]:outdir:_files' \
'--outdir=[The directory in which to place output files \[default\: the directory containing <input>\]]:outdir:_files' \
'*-Z+[Unstable options. Pass -Zhelp to show a list]:option: ' \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-C[Use only resource files cached locally]' \
'--only-cached[Use only resource files cached locally]' \
'-k[Keep the intermediate files generated during processing]' \
'--keep-intermediates[Keep the intermediate files generated during processing]' \
'--keep-logs[Keep the log files generated during processing]' \
'--synctex[Generate SyncTeX data]' \
'-p[Print the engine'\''s chatter during processing]' \
'--print[Print the engine'\''s chatter during processing]' \
'--untrusted[Input is untrusted -- disable all known-insecure features]' \
'-h[Print help]' \
'--help[Print help]' \
':input -- The file to process, or "-" to process the standard input stream:_files' \
&& ret=0
;;
(dump)
_arguments "${_arguments_options[@]}" \
'-p+[Use the specified output profile for the partial build]:PROFILE: ' \
'--profile=[Use the specified output profile for the partial build]:PROFILE: ' \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'--untrusted[Document is untrusted -- disable all known-insecure features]' \
'-C[Use only resource files cached locally]' \
'--only-cached[Use only resource files cached locally]' \
'-s[Dump the file or files whose names end with the argument]' \
'--suffix[Dump the file or files whose names end with the argument]' \
'-h[Print help]' \
'--help[Print help]' \
':filename -- The name of the intermediate file to dump:' \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
'::path -- The name of the document directory to create:_files' \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
":: :_nextonic__show_commands" \
"*::: :->show" \
&& ret=0

    case $state in
    (show)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-show-command-$line[1]:"
        case $line[1] in
            (user-cache-dir)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(shell-completions)
_arguments "${_arguments_options[@]}" \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
':shell -- Target shell for the generated completion code:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_nextonic__show__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-show-help-command-$line[1]:"
        case $line[1] in
            (user-cache-dir)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(shell-completions)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(watch)
_arguments "${_arguments_options[@]}" \
'*-x+[Tectonic commands to execute on build \[default\: build\]]:EXECUTE: ' \
'*--exec=[Tectonic commands to execute on build \[default\: build\]]:EXECUTE: ' \
'-w+[Use this URL to find resource files instead of the default]:url: ' \
'--web-bundle=[Use this URL to find resource files instead of the default]:url: ' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_nextonic__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-help-command-$line[1]:"
        case $line[1] in
            (build)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(bundle)
_arguments "${_arguments_options[@]}" \
":: :_nextonic__help__bundle_commands" \
"*::: :->bundle" \
&& ret=0

    case $state in
    (bundle)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-help-bundle-command-$line[1]:"
        case $line[1] in
            (cat)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(search)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(compile)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(dump)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" \
":: :_nextonic__help__show_commands" \
"*::: :->show" \
&& ret=0

    case $state in
    (show)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:nextonic-help-show-command-$line[1]:"
        case $line[1] in
            (user-cache-dir)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(shell-completions)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(watch)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_nextonic_commands] )) ||
_nextonic_commands() {
    local commands; commands=(
'build:Build a document' \
'bundle:Commands relating to this document’s TeX file bundle' \
'compile:Run a standalone (La)TeX compilation' \
'dump:Run a partial compilation and output an intermediate file' \
'new:Create a new document project' \
'init:Initializes a new document in the current directory' \
'show:Display various useful pieces of information' \
'watch:Watch input files and execute commands on change' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic commands' commands "$@"
}
(( $+functions[_nextonic__build_commands] )) ||
_nextonic__build_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic build commands' commands "$@"
}
(( $+functions[_nextonic__help__build_commands] )) ||
_nextonic__help__build_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help build commands' commands "$@"
}
(( $+functions[_nextonic__bundle_commands] )) ||
_nextonic__bundle_commands() {
    local commands; commands=(
'cat:Dump the contents of a file in the bundle' \
'search:Filter the list of filenames contained in the bundle' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic bundle commands' commands "$@"
}
(( $+functions[_nextonic__help__bundle_commands] )) ||
_nextonic__help__bundle_commands() {
    local commands; commands=(
'cat:Dump the contents of a file in the bundle' \
'search:Filter the list of filenames contained in the bundle' \
    )
    _describe -t commands 'nextonic help bundle commands' commands "$@"
}
(( $+functions[_nextonic__bundle__cat_commands] )) ||
_nextonic__bundle__cat_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic bundle cat commands' commands "$@"
}
(( $+functions[_nextonic__bundle__help__cat_commands] )) ||
_nextonic__bundle__help__cat_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic bundle help cat commands' commands "$@"
}
(( $+functions[_nextonic__help__bundle__cat_commands] )) ||
_nextonic__help__bundle__cat_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help bundle cat commands' commands "$@"
}
(( $+functions[_nextonic__compile_commands] )) ||
_nextonic__compile_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic compile commands' commands "$@"
}
(( $+functions[_nextonic__help__compile_commands] )) ||
_nextonic__help__compile_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help compile commands' commands "$@"
}
(( $+functions[_nextonic__dump_commands] )) ||
_nextonic__dump_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic dump commands' commands "$@"
}
(( $+functions[_nextonic__help__dump_commands] )) ||
_nextonic__help__dump_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help dump commands' commands "$@"
}
(( $+functions[_nextonic__bundle__help_commands] )) ||
_nextonic__bundle__help_commands() {
    local commands; commands=(
'cat:Dump the contents of a file in the bundle' \
'search:Filter the list of filenames contained in the bundle' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic bundle help commands' commands "$@"
}
(( $+functions[_nextonic__bundle__help__help_commands] )) ||
_nextonic__bundle__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic bundle help help commands' commands "$@"
}
(( $+functions[_nextonic__help_commands] )) ||
_nextonic__help_commands() {
    local commands; commands=(
'build:Build a document' \
'bundle:Commands relating to this document’s TeX file bundle' \
'compile:Run a standalone (La)TeX compilation' \
'dump:Run a partial compilation and output an intermediate file' \
'new:Create a new document project' \
'init:Initializes a new document in the current directory' \
'show:Display various useful pieces of information' \
'watch:Watch input files and execute commands on change' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic help commands' commands "$@"
}
(( $+functions[_nextonic__help__help_commands] )) ||
_nextonic__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help help commands' commands "$@"
}
(( $+functions[_nextonic__show__help_commands] )) ||
_nextonic__show__help_commands() {
    local commands; commands=(
'user-cache-dir:Print the location of the default per-user cache directory' \
'shell-completions:Print shell completions code for some given shell' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic show help commands' commands "$@"
}
(( $+functions[_nextonic__show__help__help_commands] )) ||
_nextonic__show__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic show help help commands' commands "$@"
}
(( $+functions[_nextonic__help__init_commands] )) ||
_nextonic__help__init_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help init commands' commands "$@"
}
(( $+functions[_nextonic__init_commands] )) ||
_nextonic__init_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic init commands' commands "$@"
}
(( $+functions[_nextonic__help__new_commands] )) ||
_nextonic__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help new commands' commands "$@"
}
(( $+functions[_nextonic__new_commands] )) ||
_nextonic__new_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic new commands' commands "$@"
}
(( $+functions[_nextonic__bundle__help__search_commands] )) ||
_nextonic__bundle__help__search_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic bundle help search commands' commands "$@"
}
(( $+functions[_nextonic__bundle__search_commands] )) ||
_nextonic__bundle__search_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic bundle search commands' commands "$@"
}
(( $+functions[_nextonic__help__bundle__search_commands] )) ||
_nextonic__help__bundle__search_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help bundle search commands' commands "$@"
}
(( $+functions[_nextonic__help__show__shell-completions_commands] )) ||
_nextonic__help__show__shell-completions_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help show shell-completions commands' commands "$@"
}
(( $+functions[_nextonic__show__help__shell-completions_commands] )) ||
_nextonic__show__help__shell-completions_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic show help shell-completions commands' commands "$@"
}
(( $+functions[_nextonic__show__shell-completions_commands] )) ||
_nextonic__show__shell-completions_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic show shell-completions commands' commands "$@"
}
(( $+functions[_nextonic__help__show_commands] )) ||
_nextonic__help__show_commands() {
    local commands; commands=(
'user-cache-dir:Print the location of the default per-user cache directory' \
'shell-completions:Print shell completions code for some given shell' \
    )
    _describe -t commands 'nextonic help show commands' commands "$@"
}
(( $+functions[_nextonic__show_commands] )) ||
_nextonic__show_commands() {
    local commands; commands=(
'user-cache-dir:Print the location of the default per-user cache directory' \
'shell-completions:Print shell completions code for some given shell' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'nextonic show commands' commands "$@"
}
(( $+functions[_nextonic__help__show__user-cache-dir_commands] )) ||
_nextonic__help__show__user-cache-dir_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help show user-cache-dir commands' commands "$@"
}
(( $+functions[_nextonic__show__help__user-cache-dir_commands] )) ||
_nextonic__show__help__user-cache-dir_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic show help user-cache-dir commands' commands "$@"
}
(( $+functions[_nextonic__show__user-cache-dir_commands] )) ||
_nextonic__show__user-cache-dir_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic show user-cache-dir commands' commands "$@"
}
(( $+functions[_nextonic__help__watch_commands] )) ||
_nextonic__help__watch_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic help watch commands' commands "$@"
}
(( $+functions[_nextonic__watch_commands] )) ||
_nextonic__watch_commands() {
    local commands; commands=()
    _describe -t commands 'nextonic watch commands' commands "$@"
}

if [ "$funcstack[1]" = "_nextonic" ]; then
    _nextonic "$@"
else
    compdef _nextonic nextonic
fi
